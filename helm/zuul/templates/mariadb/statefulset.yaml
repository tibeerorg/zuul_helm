apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "mariadb.primary.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: mariadb
    {{- if .Values.mariadb.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.mariadb.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.mariadb.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.mariadb.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.mariadb.primary.revisionHistoryLimit }}
  selector:
    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: mariadb
  serviceName: {{ include "mariadb.primary.fullname" . }}
  updateStrategy:
    type: {{ .Values.mariadb.primary.updateStrategy }}
    {{- if (eq "Recreate" .Values.mariadb.primary.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.mariadb.primary.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.mariadb.primary.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if (include "mariadb.primary.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/mariadb/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.mariadb.primary.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: mariadb
        {{- if .Values.mariadb.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.mariadb.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "mariadb.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.mariadb.primary.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.mariadb.schedulerName }}
      schedulerName: {{ .Values.mariadb.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ template "mariadb.serviceAccountName" . }}
      {{- if .Values.mariadb.primary.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.mariadb.primary.podAffinityPreset "component" "primary" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.mariadb.primary.podAntiAffinityPreset "component" "primary" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.mariadb.primary.nodeAffinityPreset.type "key" .Values.mariadb.primary.nodeAffinityPreset.key "values" .Values.mariadb.primary.nodeAffinityPreset.Values.mariadb) | nindent 10 }}
      {{- end }}
      {{- if .Values.mariadb.primary.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.mariadb.primary.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.mariadb.primary.priorityClassName }}
      priorityClassName: {{ .Values.mariadb.primary.priorityClassName | quote }}
      {{- else if .Values.mariadb.priorityClassName }}
      priorityClassName: {{ .Values.mariadb.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.mariadb.primary.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.mariadb.primary.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if or .Values.mariadb.primary.initContainers (and .Values.mariadb.primary.podSecurityContext.enabled .Values.mariadb.volumePermissions.enabled .Values.mariadb.primary.persistence.enabled) }}
      initContainers:
        {{- if .Values.mariadb.primary.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.initContainers "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.mariadb.primary.podSecurityContext.enabled .Values.mariadb.volumePermissions.enabled .Values.mariadb.primary.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "mariadb.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.mariadb.volumePermissions.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              chown -R {{ .Values.mariadb.primary.containerSecurityContext.runAsUser }}:{{ .Values.mariadb.primary.podSecurityContext.fsGroup }} /bitnami/mariadb
          securityContext:
            runAsUser: 0
          {{- if .Values.mariadb.volumePermissions.resources }}
          resources: {{- toYaml .Values.mariadb.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
              {{- if .Values.mariadb.primary.persistence.subPath }}
              subPath: {{ .Values.mariadb.primary.persistence.subPath }}
              {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: mariadb
          image: {{ include "mariadb.image" . }}
          imagePullPolicy: {{ .Values.mariadb.image.pullPolicy | quote }}
          {{- if .Values.mariadb.primary.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.mariadb.primary.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.mariadb.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.mariadb.primary.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.mariadb.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.mariadb.primary.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or .Values.mariadb.image.debug .Values.mariadb.diagnosticMode.enabled) | quote }}
            {{- if .Values.mariadb.auth.usePasswordFiles }}
            - name: MARIADB_ROOT_PASSWORD_FILE
              value: {{ default "/opt/bitnami/mariadb/secrets/mariadb-root-password" .Values.mariadb.auth.customPasswordFiles.root }}
            {{- else }}
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.secretName" . }}
                  key: mariadb-root-password
            {{- end }}
            {{- if not (empty .Values.mariadb.auth.username) }}
            - name: MARIADB_USER
              value: {{ .Values.mariadb.auth.username | quote }}
            {{- if .Values.mariadb.auth.usePasswordFiles }}
            - name: MARIADB_PASSWORD_FILE
              value: {{ default "/opt/bitnami/mariadb/secrets/mariadb-password" .Values.mariadb.auth.customPasswordFiles.user }}
            {{- else }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.secretName" . }}
                  key: mariadb-password
            {{- end }}
            {{- end }}
            - name: MARIADB_DATABASE
              value: {{ .Values.mariadb.auth.database | quote }}
            {{- if eq .Values.mariadb.architecture "replication" }}
            - name: MARIADB_REPLICATION_MODE
              value: "master"
            - name: MARIADB_REPLICATION_USER
              value: {{ .Values.mariadb.auth.replicationUser | quote }}
            {{- if .Values.mariadb.auth.usePasswordFiles }}
            - name: MARIADB_REPLICATION_PASSWORD_FILE
              value: {{ default "/opt/bitnami/mariadb/secrets/mariadb-replication-password" .Values.mariadb.auth.customPasswordFiles.replicator }}
            {{- else }}
            - name: MARIADB_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.secretName" . }}
                  key: mariadb-replication-password
            {{- end }}
            {{- end }}
            {{- if .Values.mariadb.primary.extraFlags }}
            - name: MARIADB_EXTRA_FLAGS
              value: "{{ .Values.mariadb.primary.extraFlags }}"
            {{- end }}
            {{- if .Values.mariadb.primary.startupWaitOptions }}
            - name: MARIADB_STARTUP_WAIT_RETRIES
              value: "{{ .Values.mariadb.primary.startupWaitOptions.retries | default 300 }}"
            - name: MARIADB_STARTUP_WAIT_SLEEP_TIME
              value: "{{ .Values.mariadb.primary.startupWaitOptions.sleepTime | default 2 }}"
            {{- end }}
            {{- if .Values.mariadb.primary.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.mariadb.primary.extraEnvVarsCM .Values.mariadb.primary.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.mariadb.primary.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.mariadb.primary.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.mariadb.primary.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.mariadb.primary.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: mysql
              containerPort: 3306
          {{- if not .Values.mariadb.diagnosticMode.enabled }}
          {{- if .Values.mariadb.primary.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.mariadb.primary.livenessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          {{- else if .Values.mariadb.primary.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.mariadb.primary.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.mariadb.primary.readinessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          {{- else if .Values.mariadb.primary.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.mariadb.primary.resources }}
          resources: {{ toYaml .Values.mariadb.primary.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
              {{- if .Values.mariadb.primary.persistence.subPath }}
              subPath: {{ .Values.mariadb.primary.persistence.subPath }}
              {{- end }}
            {{- if or .Values.mariadb.initdbScriptsConfigMap .Values.mariadb.initdbScripts }}
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
            {{- if or .Values.mariadb.primary.configuration .Values.mariadb.primary.existingConfigmap }}
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
            {{- end }}
            {{- if and .Values.mariadb.auth.usePasswordFiles (not .Values.mariadb.auth.customPasswordFiles) }}
            - name: mariadb-credentials
              mountPath: /opt/bitnami/mariadb/secrets/
            {{- end }}
            {{- if .Values.mariadb.primary.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.mariadb.metrics.enabled }}
        - name: metrics
          image: {{ include "mariadb.metrics.image" . }}
          imagePullPolicy: {{ .Values.mariadb.metrics.image.pullPolicy | quote }}
          env:
            {{- if .Values.mariadb.auth.usePasswordFiles }}
            - name: MARIADB_ROOT_PASSWORD_FILE
              value: {{ default "/opt/bitnami/mysqld-exporter/secrets/mariadb-root-password" .Values.mariadb.auth.customPasswordFiles.root }}
            {{- else }}
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.secretName" . }}
                  key: mariadb-root-password
            {{- end }}
          {{- if .Values.mariadb.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.diagnosticMode.command "context" $) | nindent 12 }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else }}
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              DATA_SOURCE_NAME="root:${password_aux}@(localhost:3306)/" /bin/mysqld_exporter {{- range .Values.mariadb.metrics.extraArgs.primary }} {{ . }} {{- end }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: 9104
          {{- if not .Values.mariadb.diagnosticMode.enabled }}
          {{- if .Values.mariadb.metrics.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.mariadb.metrics.livenessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /metrics
              port: metrics
          {{- end }}
          {{- if .Values.mariadb.metrics.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.mariadb.metrics.readinessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /metrics
              port: metrics
          {{- end }}
          {{- end }}
          {{- if .Values.mariadb.metrics.resources }}
          resources: {{- toYaml .Values.mariadb.metrics.resources | nindent 12 }}
          {{- end }}
          {{- if and .Values.mariadb.auth.usePasswordFiles (not .Values.mariadb.auth.customPasswordFiles) }}
          volumeMounts:
            - name: mariadb-credentials
              mountPath: /opt/bitnami/mysqld-exporter/secrets/
          {{- end }}
        {{- end }}
        {{- if .Values.mariadb.primary.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if or .Values.mariadb.primary.configuration .Values.mariadb.primary.existingConfigmap }}
        - name: config
          configMap:
            name: {{ include "mariadb.primary.configmapName" . }}
        {{- end }}
        {{- if or .Values.mariadb.initdbScriptsConfigMap .Values.mariadb.initdbScripts }}
        - name: custom-init-scripts
          configMap:
            name: {{ template "mariadb.initdbScriptsCM" . }}
        {{- end }}
        {{- if and .Values.mariadb.auth.usePasswordFiles (not .Values.mariadb.auth.customPasswordFiles) }}
        - name: mariadb-credentials
          secret:
            secretName: {{ template "mariadb.secretName" . }}
            items:
              - key: mariadb-root-password
                path: mariadb-root-password
              - key: mariadb-password
                path: mariadb-password
              {{- if eq .Values.mariadb.architecture "replication" }}
              - key: mariadb-replication-password
                path: mariadb-replication-password
              {{- end }}
        {{- end }}
        {{- if .Values.mariadb.primary.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
  {{- if and .Values.mariadb.primary.persistence.enabled .Values.mariadb.primary.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.mariadb.primary.persistence.existingClaim . }}
  {{- else if not .Values.mariadb.primary.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.mariadb.primary.persistence.enabled (not .Values.mariadb.primary.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: {{ include "common.labels.matchLabels" . | nindent 10 }}
          app.kubernetes.io/component: mariadb
      spec:
        accessModes:
          {{- range .Values.mariadb.primary.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.mariadb.primary.persistence.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.mariadb.primary.persistence "global" .Values.mariadb.global) }}
        {{- if .Values.mariadb.primary.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.mariadb.primary.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- end }}