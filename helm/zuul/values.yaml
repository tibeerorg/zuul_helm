#########################################
# Log Server
#########################################

# still missing the mounts
log_server:
  fullname: logserver
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: [""]
  args: [""]
  image:
    registry: docker.io
    repository: httpd
    tag: alpine
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 80


#########################################
# MariaDB
#########################################

# need to reconfigure the mounts probably
mariadb:
  global:
    imageRegistry: ""
    imagePullSecrets: []
    storageClass: ""
  nameOverride: ""
  fullnameOverride: ""
  clusterDomain: cluster.local
  schedulerName: ""
  extraDeploy: []
  diagnosticMode:
    enabled: false
    command:
      - sleep
    args:
      - infinity
  image:
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.5.11-debian-10-r25
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  architecture: standalone
  auth:
    rootPassword: ""
    database: my_database
    username: ""
    password: ""
    replicationUser: replicator
    replicationPassword: ""
    existingSecret: ""
    forcePassword: false
    usePasswordFiles: false
    customPasswordFiles: {}
  initdbScripts: {}
  initdbScriptsConfigMap: ""
  primary:
    command: []
    args: []
    hostAliases: []
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    existingConfiguration: ""
    updateStrategy: RollingUpdate
    rollingUpdatePartition: ""
    podAnnotations: {}
    podAffinityPreset: ""
    podAntiAffinityPreset: soft
    nodeAffinityPreset:
      type: ""
      key: ""
      values: []
    affinity: {}
    nodeSelector: {}
    tolerations: []
    priorityClassName: ""
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    resources:
      limits: {}
      requests: {}
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    customLivenessProbe: {}
    customReadinessProbe: {}
    startupWaitOptions: {}
    extraFlags: ""
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    persistence:
      enabled: true
      existingClaim: ""
      subPath: ""
      storageClass: ""
      annotations: {}
      accessModes:
        - ReadWriteOnce
      size: 8Gi
      selector: {}
    extraVolumes: []
    extraVolumeMounts: []
    initContainers: []
    sidecars: []
    service:
      type: ClusterIP
      port: 3306
      nodePort: ""
      clusterIP: ""
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      annotations: {}
    pdb:
      enabled: false
      minAvailable: 1
      maxUnavailable: ""
    revisionHistoryLimit: 10

#########################################
# Nodepool Launcher
#########################################

# still missing the mounts (certs und /etc/nodepool)
nodepool_launcher:
  fullname: nodepoollauncher
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: [""]
  args: [""]
  image:
    registry: docker.io
    repository: zuul/nodepool-launcher
    tag: 4.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 8022


#########################################
# Worker Node
#########################################

# still missing the mounts
worker_node:
  fullname: workernode
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: ["apt-get update && DEBIAN_FRONTEND='noninteractive' apt-get -y install git openssh-server rsync; mkdir /var/run/sshd; chmod 0700 /root/.ssh; chown -R root:root /root/.ssh; /usr/sbin/sshd -D"]
  args: [""]
  image:
    registry: docker.io
    repository: ubuntu
    tag: 20.04
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 22


#########################################
# Zookeeper
#########################################

# missing certs mount
zookeeper:
  fullname: zookeeper
  fqdn: "zookeeper_1.example"
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: ["zkServer.sh"]
  args: ["start-foreground"]
  image:
    registry: docker.io
    repository: zuul/zuul-executor
    tag: 4.5.1
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 3306
  persistence:
    enabled: true
    storageClass: "longhorn"
    accessModes:
      - ReadWriteOnce
    size: 8Gi


#########################################
# Zuul Executor
#########################################

# missing mounts
#       - "{{ component_conf_dirs.zuul }}:/etc/zuul/:z"
#       - "{{ component_conf_dirs.ssh_keys }}:/var/ssh:z"
#       - "{{ component_conf_dirs.certs }}:/var/certs:z"
#       - "log_server:/srv/static/logs:z"
#       - env files
zuul_executor:
  fullname: zuul_executor
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: [""]
  args: [""]
  image:
    registry: docker.io
    repository: zuul/zuul-executor
    tag: 4.5.1
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 7900
  persistence:
    enabled: true
    storageClass: "longhorn"
    accessModes:
      - ReadWriteOnce
    size: 8Gi


#########################################
# Zuul Scheduler
#########################################

# missing mounts
#       - "{{ component_conf_dirs.zuul }}:/etc/zuul/:z"
#       - "{{ component_conf_dirs.ssh_keys }}:/var/ssh:z"
#       - "{{ component_conf_dirs.certs }}:/var/certs:z"
#       - "{{ component_conf_dirs.scheduler }}/wait-to-start.sh:/wait-to-start.sh:ro"
#       - env files
zuul_scheduler:
  fullname: zuul_scheduler
  revisionHistoryLimit: 10
  updateStrategy: RollingUpdate
  rollingUpdatePartition: ""
  command: ["sh -c '/wait-to-start.sh && zuul-scheduler -f'"]
  args: [""]
  image:
    registry: docker.io
    repository: zuul/zuul-scheduler
    tag: 4.5.1
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false
  service:
    type: ClusterIP
    port: 4730
  persistence:
    enabled: true
    storageClass: "longhorn"
    accessModes:
      - ReadWriteOnce
    size: 8Gi


#########################################
# Zuul Web
#########################################


